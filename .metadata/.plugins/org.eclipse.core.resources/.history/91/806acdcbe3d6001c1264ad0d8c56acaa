package meucursoJPA.model;

import java.io.Serializable;
import javax.persistence.*;
import java.util.List;


/**
 * The persistent class for the usuario database table.
 * 
 */
@Entity
@NamedQuery(name="Usuario.findAll", query="SELECT u FROM Usuario u")
public class Usuario extends GenericDomain {
	private static final long serialVersionUID = 1L;
	private long codigo;
	private String cpf;
	private byte[] grupo;
	private String login;
	private String senha;
	private List<Estabelecimento> estabelecimentos;
	private List<Grupo> grupos;
	private Estabelecimento estabelecimento;
	private FuncaoUsuario funcaoUsuario;

	public Usuario() {
	}


	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	public long getCodigo() {
		return this.codigo;
	}

	public void setCodigo(long codigo) {
		this.codigo = codigo;
	}


	public String getCpf() {
		return this.cpf;
	}

	public void setCpf(String cpf) {
		this.cpf = cpf;
	}


	@Lob
	public byte[] getGrupo() {
		return this.grupo;
	}

	public void setGrupo(byte[] grupo) {
		this.grupo = grupo;
	}


	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}


	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}


	//bi-directional many-to-many association to Estabelecimento
	@ManyToMany
	@JoinTable(
		name="estabelecimento_usuarios"
		, joinColumns={
			@JoinColumn(name="usuarios_codigo")
			}
		, inverseJoinColumns={
			@JoinColumn(name="estabelecimento_codigo")
			}
		)
	public List<Estabelecimento> getEstabelecimentos() {
		return this.estabelecimentos;
	}

	public void setEstabelecimentos(List<Estabelecimento> estabelecimentos) {
		this.estabelecimentos = estabelecimentos;
	}


	//bi-directional many-to-one association to Grupo
	@OneToMany(mappedBy="usuario")
	public List<Grupo> getGrupos() {
		return this.grupos;
	}

	public void setGrupos(List<Grupo> grupos) {
		this.grupos = grupos;
	}

	public Grupo addGrupo(Grupo grupo) {
		getGrupos().add(grupo);
		grupo.setUsuario(this);

		return grupo;
	}

	public Grupo removeGrupo(Grupo grupo) {
		getGrupos().remove(grupo);
		grupo.setUsuario(null);

		return grupo;
	}


	//bi-directional many-to-one association to Estabelecimento
	@ManyToOne
	public Estabelecimento getEstabelecimento() {
		return this.estabelecimento;
	}

	public void setEstabelecimento(Estabelecimento estabelecimento) {
		this.estabelecimento = estabelecimento;
	}


	//bi-directional many-to-one association to FuncaoUsuario
	@ManyToOne
	@JoinColumn(name="funcao_usuario_codigo")
	public FuncaoUsuario getFuncaoUsuario() {
		return this.funcaoUsuario;
	}

	public void setFuncaoUsuario(FuncaoUsuario funcaoUsuario) {
		this.funcaoUsuario = funcaoUsuario;
	}

}
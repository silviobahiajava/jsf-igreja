package meucursoJPA.model;

import java.io.Serializable;
import javax.persistence.*;
import java.util.Date;
import java.util.List;


/**
 * The persistent class for the crianca database table.
 * 
 */
@Entity
@NamedQuery(name="Crianca.findAll", query="SELECT c FROM Crianca c")
public class Crianca implements Serializable {
	private static final long serialVersionUID = 1L;
	private long codigo;
	private String bairro;
	private Date dataNascimento;
	private String endereco;
	private String idade;
	private String nome;
	private String numeroEndereco;
	private List<Aniversario> aniversarios;
	private Filicacao filicacao;
	private List<CriancaMatriculadaNaEscolinha> criancaMatriculadaNaEscolinhas;

	public Crianca() {
	}


	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	public long getCodigo() {
		return this.codigo;
	}

	public void setCodigo(long codigo) {
		this.codigo = codigo;
	}


	public String getBairro() {
		return this.bairro;
	}

	public void setBairro(String bairro) {
		this.bairro = bairro;
	}


	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="data_nascimento")
	public Date getDataNascimento() {
		return this.dataNascimento;
	}

	public void setDataNascimento(Date dataNascimento) {
		this.dataNascimento = dataNascimento;
	}


	public String getEndereco() {
		return this.endereco;
	}

	public void setEndereco(String endereco) {
		this.endereco = endereco;
	}


	public String getIdade() {
		return this.idade;
	}

	public void setIdade(String idade) {
		this.idade = idade;
	}


	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}


	@Column(name="numero_endereco")
	public String getNumeroEndereco() {
		return this.numeroEndereco;
	}

	public void setNumeroEndereco(String numeroEndereco) {
		this.numeroEndereco = numeroEndereco;
	}


	//bi-directional many-to-one association to Aniversario
	@OneToMany(mappedBy="criancaBean")
	public List<Aniversario> getAniversarios() {
		return this.aniversarios;
	}

	public void setAniversarios(List<Aniversario> aniversarios) {
		this.aniversarios = aniversarios;
	}

	public Aniversario addAniversario(Aniversario aniversario) {
		getAniversarios().add(aniversario);
		aniversario.setCriancaBean(this);

		return aniversario;
	}

	public Aniversario removeAniversario(Aniversario aniversario) {
		getAniversarios().remove(aniversario);
		aniversario.setCriancaBean(null);

		return aniversario;
	}


	//bi-directional many-to-one association to Filicacao
	@ManyToOne
	@JoinColumn(name="filiacao_codigo")
	public Filicacao getFilicacao() {
		return this.filicacao;
	}

	public void setFilicacao(Filicacao filicacao) {
		this.filicacao = filicacao;
	}


	//bi-directional many-to-one association to CriancaMatriculadaNaEscolinha
	@OneToMany(mappedBy="crianca")
	public List<CriancaMatriculadaNaEscolinha> getCriancaMatriculadaNaEscolinhas() {
		return this.criancaMatriculadaNaEscolinhas;
	}

	public void setCriancaMatriculadaNaEscolinhas(List<CriancaMatriculadaNaEscolinha> criancaMatriculadaNaEscolinhas) {
		this.criancaMatriculadaNaEscolinhas = criancaMatriculadaNaEscolinhas;
	}

	public CriancaMatriculadaNaEscolinha addCriancaMatriculadaNaEscolinha(CriancaMatriculadaNaEscolinha criancaMatriculadaNaEscolinha) {
		getCriancaMatriculadaNaEscolinhas().add(criancaMatriculadaNaEscolinha);
		criancaMatriculadaNaEscolinha.setCrianca(this);

		return criancaMatriculadaNaEscolinha;
	}

	public CriancaMatriculadaNaEscolinha removeCriancaMatriculadaNaEscolinha(CriancaMatriculadaNaEscolinha criancaMatriculadaNaEscolinha) {
		getCriancaMatriculadaNaEscolinhas().remove(criancaMatriculadaNaEscolinha);
		criancaMatriculadaNaEscolinha.setCrianca(null);

		return criancaMatriculadaNaEscolinha;
	}

}
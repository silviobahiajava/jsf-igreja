package meucursoJPA.model;

import java.io.Serializable;
import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;


/**
 * The persistent class for the lancamento_livrocaixa database table.
 * 
 */
@Entity
@Table(name="lancamento_livrocaixa")
@NamedQuery(name="LancamentoLivrocaixa.findAll", query="SELECT l FROM LancamentoLivrocaixa l")
public class LancamentoLivrocaixa implements Serializable {
	private static final long serialVersionUID = 1L;
	private long codigo;
	private byte[] contaPraPagar;
	private byte[] contasPagas;
	private Date dataDoLancamento;
	private BigDecimal despesa;
	private String historico;
	private BigDecimal receita;
	private BigDecimal saldo;
	private BigDecimal saldoAnterior;
	private String tipoDespesa;
	private String tipoMovimentacao;
	private String tipoReceita;
	private List<Compra> compras;
	private Grupo grupo;
	private List<Oferta> ofertas;

	public LancamentoLivrocaixa() {
	}


	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	public long getCodigo() {
		return this.codigo;
	}

	public void setCodigo(long codigo) {
		this.codigo = codigo;
	}


	@Lob
	@Column(name="conta_pra_pagar")
	public byte[] getContaPraPagar() {
		return this.contaPraPagar;
	}

	public void setContaPraPagar(byte[] contaPraPagar) {
		this.contaPraPagar = contaPraPagar;
	}


	@Lob
	@Column(name="contas_pagas")
	public byte[] getContasPagas() {
		return this.contasPagas;
	}

	public void setContasPagas(byte[] contasPagas) {
		this.contasPagas = contasPagas;
	}


	@Temporal(TemporalType.DATE)
	@Column(name="data_do_lancamento")
	public Date getDataDoLancamento() {
		return this.dataDoLancamento;
	}

	public void setDataDoLancamento(Date dataDoLancamento) {
		this.dataDoLancamento = dataDoLancamento;
	}


	public BigDecimal getDespesa() {
		return this.despesa;
	}

	public void setDespesa(BigDecimal despesa) {
		this.despesa = despesa;
	}


	public String getHistorico() {
		return this.historico;
	}

	public void setHistorico(String historico) {
		this.historico = historico;
	}


	public BigDecimal getReceita() {
		return this.receita;
	}

	public void setReceita(BigDecimal receita) {
		this.receita = receita;
	}


	public BigDecimal getSaldo() {
		return this.saldo;
	}

	public void setSaldo(BigDecimal saldo) {
		this.saldo = saldo;
	}


	@Column(name="saldo_anterior")
	public BigDecimal getSaldoAnterior() {
		return this.saldoAnterior;
	}

	public void setSaldoAnterior(BigDecimal saldoAnterior) {
		this.saldoAnterior = saldoAnterior;
	}


	@Column(name="tipo_despesa")
	public String getTipoDespesa() {
		return this.tipoDespesa;
	}

	public void setTipoDespesa(String tipoDespesa) {
		this.tipoDespesa = tipoDespesa;
	}


	@Column(name="tipo_movimentacao")
	public String getTipoMovimentacao() {
		return this.tipoMovimentacao;
	}

	public void setTipoMovimentacao(String tipoMovimentacao) {
		this.tipoMovimentacao = tipoMovimentacao;
	}


	@Column(name="tipo_receita")
	public String getTipoReceita() {
		return this.tipoReceita;
	}

	public void setTipoReceita(String tipoReceita) {
		this.tipoReceita = tipoReceita;
	}


	//bi-directional many-to-one association to Compra
	@OneToMany(mappedBy="lancamentoLivrocaixa")
	public List<Compra> getCompras() {
		return this.compras;
	}

	public void setCompras(List<Compra> compras) {
		this.compras = compras;
	}

	public Compra addCompra(Compra compra) {
		getCompras().add(compra);
		compra.setLancamentoLivrocaixa(this);

		return compra;
	}

	public Compra removeCompra(Compra compra) {
		getCompras().remove(compra);
		compra.setLancamentoLivrocaixa(null);

		return compra;
	}


	//bi-directional many-to-one association to Grupo
	@ManyToOne
	public Grupo getGrupo() {
		return this.grupo;
	}

	public void setGrupo(Grupo grupo) {
		this.grupo = grupo;
	}


	//bi-directional many-to-one association to Oferta
	@OneToMany(mappedBy="lancamentoLivrocaixa")
	public List<Oferta> getOfertas() {
		return this.ofertas;
	}

	public void setOfertas(List<Oferta> ofertas) {
		this.ofertas = ofertas;
	}

	public Oferta addOferta(Oferta oferta) {
		getOfertas().add(oferta);
		oferta.setLancamentoLivrocaixa(this);

		return oferta;
	}

	public Oferta removeOferta(Oferta oferta) {
		getOfertas().remove(oferta);
		oferta.setLancamentoLivrocaixa(null);

		return oferta;
	}

}